<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MovieTheatreDataSet" targetNamespace="http://tempuri.org/MovieTheatreDataSet.xsd" xmlns:mstns="http://tempuri.org/MovieTheatreDataSet.xsd" xmlns="http://tempuri.org/MovieTheatreDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MovieTheatreConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MovieTheatreConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MovieDatabaseFinal.Properties.Settings.GlobalReference.Default.MovieTheatreConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MoviesTableAdapter" GeneratorDataComponentClassName="MoviesTableAdapter" Name="Movies" UserDataComponentName="MoviesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MovieTheatreConnectionString (Settings)" DbObjectName="dbo.Movies" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Movies] WHERE (([MovieId] = @Original_MovieId) AND ([MovieName] = @Original_MovieName) AND ([Genre] = @Original_Genre) AND ([DateOfRelease] = @Original_DateOfRelease) AND ([Actors] = @Original_Actors))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Movies] ([MovieId], [MovieName], [Genre], [DateOfRelease], [Actors]) VALUES (@MovieId, @MovieName, @Genre, @DateOfRelease, @Actors);
SELECT MovieId, MovieName, Genre, DateOfRelease, Actors FROM Movies WHERE (MovieId = @MovieId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MovieId, MovieName, Genre, DateOfRelease, Actors FROM dbo.Movies</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Movies] SET [MovieId] = @MovieId, [MovieName] = @MovieName, [Genre] = @Genre, [DateOfRelease] = @DateOfRelease, [Actors] = @Actors WHERE (([MovieId] = @Original_MovieId) AND ([MovieName] = @Original_MovieName) AND ([Genre] = @Original_Genre) AND ([DateOfRelease] = @Original_DateOfRelease) AND ([Actors] = @Original_Actors));
SELECT MovieId, MovieName, Genre, DateOfRelease, Actors FROM Movies WHERE (MovieId = @MovieId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Genre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DateOfRelease" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DateOfRelease" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Actors" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Actors" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MovieId" DataSetColumn="MovieId" />
              <Mapping SourceColumn="MovieName" DataSetColumn="MovieName" />
              <Mapping SourceColumn="Genre" DataSetColumn="Genre" />
              <Mapping SourceColumn="DateOfRelease" DataSetColumn="DateOfRelease" />
              <Mapping SourceColumn="Actors" DataSetColumn="Actors" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MovieTicketUserTableAdapter" GeneratorDataComponentClassName="MovieTicketUserTableAdapter" Name="MovieTicketUser" UserDataComponentName="MovieTicketUserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MovieTheatreConnectionString (Settings)" DbObjectName="dbo.MovieTicketUser" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MovieTicketUser] WHERE (([MovieId] = @Original_MovieId) AND ([TicketId] = @Original_TicketId) AND ([UserId] = @Original_UserId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MovieTicketUser] ([MovieId], [TicketId], [UserId]) VALUES (@MovieId, @TicketId, @UserId);
SELECT MovieId, TicketId, UserId FROM MovieTicketUser WHERE (MovieId = @MovieId) AND (TicketId = @TicketId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MovieId, TicketId, UserId FROM dbo.MovieTicketUser</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MovieTicketUser] SET [MovieId] = @MovieId, [TicketId] = @TicketId, [UserId] = @UserId WHERE (([MovieId] = @Original_MovieId) AND ([TicketId] = @Original_TicketId) AND ([UserId] = @Original_UserId));
SELECT MovieId, TicketId, UserId FROM MovieTicketUser WHERE (MovieId = @MovieId) AND (TicketId = @TicketId) AND (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TicketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TicketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MovieId" DataSetColumn="MovieId" />
              <Mapping SourceColumn="TicketId" DataSetColumn="TicketId" />
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScreenRoomTableAdapter" GeneratorDataComponentClassName="ScreenRoomTableAdapter" Name="ScreenRoom" UserDataComponentName="ScreenRoomTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MovieTheatreConnectionString (Settings)" DbObjectName="dbo.ScreenRoom" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ScreenRoom] WHERE (([ScreenRoomId] = @Original_ScreenRoomId) AND ([MovieName] = @Original_MovieName) AND ([RoomNo] = @Original_RoomNo) AND ([TotalSeatNo] = @Original_TotalSeatNo))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ScreenRoom] ([ScreenRoomId], [MovieName], [RoomNo], [TotalSeatNo]) VALUES (@ScreenRoomId, @MovieName, @RoomNo, @TotalSeatNo);
SELECT ScreenRoomId, MovieName, RoomNo, TotalSeatNo FROM ScreenRoom WHERE (ScreenRoomId = @ScreenRoomId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@ScreenRoomId" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ScreenRoomId, MovieName, RoomNo, TotalSeatNo FROM dbo.ScreenRoom</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ScreenRoom] SET [ScreenRoomId] = @ScreenRoomId, [MovieName] = @MovieName, [RoomNo] = @RoomNo, [TotalSeatNo] = @TotalSeatNo WHERE (([ScreenRoomId] = @Original_ScreenRoomId) AND ([MovieName] = @Original_MovieName) AND ([RoomNo] = @Original_RoomNo) AND ([TotalSeatNo] = @Original_TotalSeatNo));
SELECT ScreenRoomId, MovieName, RoomNo, TotalSeatNo FROM ScreenRoom WHERE (ScreenRoomId = @ScreenRoomId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@ScreenRoomId" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MovieName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MovieName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoomNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoomNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TotalSeatNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TotalSeatNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ScreenRoomId" DataSetColumn="ScreenRoomId" />
              <Mapping SourceColumn="MovieName" DataSetColumn="MovieName" />
              <Mapping SourceColumn="RoomNo" DataSetColumn="RoomNo" />
              <Mapping SourceColumn="TotalSeatNo" DataSetColumn="TotalSeatNo" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShowTimeTableAdapter" GeneratorDataComponentClassName="ShowTimeTableAdapter" Name="ShowTime" UserDataComponentName="ShowTimeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MovieTheatreConnectionString (Settings)" DbObjectName="dbo.ShowTime" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ShowTime] WHERE (([ShowTimeId] = @Original_ShowTimeId) AND ([MovieId] = @Original_MovieId) AND ([ScreenRoomId] = @Original_ScreenRoomId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ShowTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ShowTimeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ShowTime] ([ShowTimeId], [MovieId], [ScreenRoomId]) VALUES (@ShowTimeId, @MovieId, @ScreenRoomId);
SELECT ShowTimeId, MovieId, ScreenRoomId FROM ShowTime WHERE (ShowTimeId = @ShowTimeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ShowTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ShowTimeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ShowTimeId, MovieId, ScreenRoomId FROM dbo.ShowTime</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ShowTime] SET [ShowTimeId] = @ShowTimeId, [MovieId] = @MovieId, [ScreenRoomId] = @ScreenRoomId WHERE (([ShowTimeId] = @Original_ShowTimeId) AND ([MovieId] = @Original_MovieId) AND ([ScreenRoomId] = @Original_ScreenRoomId));
SELECT ShowTimeId, MovieId, ScreenRoomId FROM ShowTime WHERE (ShowTimeId = @ShowTimeId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ShowTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ShowTimeId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ShowTimeId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ShowTimeId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MovieId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MovieId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenRoomId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenRoomId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ShowTimeId" DataSetColumn="ShowTimeId" />
              <Mapping SourceColumn="MovieId" DataSetColumn="MovieId" />
              <Mapping SourceColumn="ScreenRoomId" DataSetColumn="ScreenRoomId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TicketTableAdapter" GeneratorDataComponentClassName="TicketTableAdapter" Name="Ticket" UserDataComponentName="TicketTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MovieTheatreConnectionString (Settings)" DbObjectName="dbo.Ticket" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Ticket] WHERE (([ticketId] = @Original_ticketId) AND ([E_ticket] = @Original_E_ticket) AND ([availability] = @Original_availability))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Ticket] ([ticketId], [E_ticket], [availability]) VALUES (@ticketId, @E_ticket, @availability);
SELECT ticketId, E_ticket, availability FROM Ticket WHERE (ticketId = @ticketId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ticketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ticketId, E_ticket, availability FROM dbo.Ticket</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Ticket] SET [ticketId] = @ticketId, [E_ticket] = @E_ticket, [availability] = @availability WHERE (([ticketId] = @Original_ticketId) AND ([E_ticket] = @Original_E_ticket) AND ([availability] = @Original_availability));
SELECT ticketId, E_ticket, availability FROM Ticket WHERE (ticketId = @ticketId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ticketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticketId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticketId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_E_ticket" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="E_ticket" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_availability" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="availability" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ticketId" DataSetColumn="ticketId" />
              <Mapping SourceColumn="E_ticket" DataSetColumn="E_ticket" />
              <Mapping SourceColumn="availability" DataSetColumn="availability" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserDataTableAdapter" GeneratorDataComponentClassName="UserDataTableAdapter" Name="UserData" UserDataComponentName="UserDataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MovieTheatreConnectionString (Settings)" DbObjectName="dbo.UserData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserData] WHERE (([UserId] = @Original_UserId) AND ([UserName] = @Original_UserName) AND ([Password] = @Original_Password) AND ([UserType] = @Original_UserType))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserData] ([UserId], [UserName], [Password], [UserType]) VALUES (@UserId, @UserName, @Password, @UserType);
SELECT UserId, UserName, Password, UserType FROM UserData WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserType" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserId, UserName, Password, UserType FROM dbo.UserData</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserData] SET [UserId] = @UserId, [UserName] = @UserName, [Password] = @Password, [UserType] = @UserType WHERE (([UserId] = @Original_UserId) AND ([UserName] = @Original_UserName) AND ([Password] = @Original_Password) AND ([UserType] = @Original_UserType));
SELECT UserId, UserName, Password, UserType FROM UserData WHERE (UserId = @UserId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserType" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserType" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserType" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="UserType" DataSetColumn="UserType" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MovieTheatreDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="MovieTheatreDataSet" msprop:Generator_DataSetName="MovieTheatreDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Movies" msprop:Generator_RowEvHandlerName="MoviesRowChangeEventHandler" msprop:Generator_RowDeletedName="MoviesRowDeleted" msprop:Generator_RowDeletingName="MoviesRowDeleting" msprop:Generator_RowEvArgName="MoviesRowChangeEvent" msprop:Generator_TablePropName="Movies" msprop:Generator_RowChangedName="MoviesRowChanged" msprop:Generator_RowChangingName="MoviesRowChanging" msprop:Generator_TableClassName="MoviesDataTable" msprop:Generator_RowClassName="MoviesRow" msprop:Generator_TableVarName="tableMovies" msprop:Generator_UserTableName="Movies">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MovieId" msprop:Generator_ColumnPropNameInRow="MovieId" msprop:Generator_ColumnPropNameInTable="MovieIdColumn" msprop:Generator_ColumnVarNameInTable="columnMovieId" msprop:Generator_UserColumnName="MovieId" type="xs:int" />
              <xs:element name="MovieName" msprop:Generator_ColumnPropNameInRow="MovieName" msprop:Generator_ColumnPropNameInTable="MovieNameColumn" msprop:Generator_ColumnVarNameInTable="columnMovieName" msprop:Generator_UserColumnName="MovieName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Genre" msprop:Generator_ColumnPropNameInRow="Genre" msprop:Generator_ColumnPropNameInTable="GenreColumn" msprop:Generator_ColumnVarNameInTable="columnGenre" msprop:Generator_UserColumnName="Genre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DateOfRelease" msprop:Generator_ColumnPropNameInRow="DateOfRelease" msprop:Generator_ColumnPropNameInTable="DateOfReleaseColumn" msprop:Generator_ColumnVarNameInTable="columnDateOfRelease" msprop:Generator_UserColumnName="DateOfRelease" type="xs:int" />
              <xs:element name="Actors" msprop:Generator_ColumnPropNameInRow="Actors" msprop:Generator_ColumnPropNameInTable="ActorsColumn" msprop:Generator_ColumnVarNameInTable="columnActors" msprop:Generator_UserColumnName="Actors">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MovieTicketUser" msprop:Generator_RowEvHandlerName="MovieTicketUserRowChangeEventHandler" msprop:Generator_RowDeletedName="MovieTicketUserRowDeleted" msprop:Generator_RowDeletingName="MovieTicketUserRowDeleting" msprop:Generator_RowEvArgName="MovieTicketUserRowChangeEvent" msprop:Generator_TablePropName="MovieTicketUser" msprop:Generator_RowChangedName="MovieTicketUserRowChanged" msprop:Generator_RowChangingName="MovieTicketUserRowChanging" msprop:Generator_TableClassName="MovieTicketUserDataTable" msprop:Generator_RowClassName="MovieTicketUserRow" msprop:Generator_TableVarName="tableMovieTicketUser" msprop:Generator_UserTableName="MovieTicketUser">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MovieId" msprop:Generator_ColumnPropNameInRow="MovieId" msprop:Generator_ColumnPropNameInTable="MovieIdColumn" msprop:Generator_ColumnVarNameInTable="columnMovieId" msprop:Generator_UserColumnName="MovieId" type="xs:int" />
              <xs:element name="TicketId" msprop:Generator_ColumnPropNameInRow="TicketId" msprop:Generator_ColumnPropNameInTable="TicketIdColumn" msprop:Generator_ColumnVarNameInTable="columnTicketId" msprop:Generator_UserColumnName="TicketId" type="xs:int" />
              <xs:element name="UserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_UserColumnName="UserId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ScreenRoom" msprop:Generator_RowEvHandlerName="ScreenRoomRowChangeEventHandler" msprop:Generator_RowDeletedName="ScreenRoomRowDeleted" msprop:Generator_RowDeletingName="ScreenRoomRowDeleting" msprop:Generator_RowEvArgName="ScreenRoomRowChangeEvent" msprop:Generator_TablePropName="ScreenRoom" msprop:Generator_RowChangedName="ScreenRoomRowChanged" msprop:Generator_RowChangingName="ScreenRoomRowChanging" msprop:Generator_TableClassName="ScreenRoomDataTable" msprop:Generator_RowClassName="ScreenRoomRow" msprop:Generator_TableVarName="tableScreenRoom" msprop:Generator_UserTableName="ScreenRoom">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ScreenRoomId" msprop:Generator_ColumnPropNameInRow="ScreenRoomId" msprop:Generator_ColumnPropNameInTable="ScreenRoomIdColumn" msprop:Generator_ColumnVarNameInTable="columnScreenRoomId" msprop:Generator_UserColumnName="ScreenRoomId" type="xs:decimal" />
              <xs:element name="MovieName" msprop:Generator_ColumnPropNameInRow="MovieName" msprop:Generator_ColumnPropNameInTable="MovieNameColumn" msprop:Generator_ColumnVarNameInTable="columnMovieName" msprop:Generator_UserColumnName="MovieName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RoomNo" msprop:Generator_ColumnPropNameInRow="RoomNo" msprop:Generator_ColumnPropNameInTable="RoomNoColumn" msprop:Generator_ColumnVarNameInTable="columnRoomNo" msprop:Generator_UserColumnName="RoomNo" type="xs:int" />
              <xs:element name="TotalSeatNo" msprop:Generator_ColumnPropNameInRow="TotalSeatNo" msprop:Generator_ColumnPropNameInTable="TotalSeatNoColumn" msprop:Generator_ColumnVarNameInTable="columnTotalSeatNo" msprop:Generator_UserColumnName="TotalSeatNo" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ShowTime" msprop:Generator_RowEvHandlerName="ShowTimeRowChangeEventHandler" msprop:Generator_RowDeletedName="ShowTimeRowDeleted" msprop:Generator_RowDeletingName="ShowTimeRowDeleting" msprop:Generator_RowEvArgName="ShowTimeRowChangeEvent" msprop:Generator_TablePropName="ShowTime" msprop:Generator_RowChangedName="ShowTimeRowChanged" msprop:Generator_RowChangingName="ShowTimeRowChanging" msprop:Generator_TableClassName="ShowTimeDataTable" msprop:Generator_RowClassName="ShowTimeRow" msprop:Generator_TableVarName="tableShowTime" msprop:Generator_UserTableName="ShowTime">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ShowTimeId" msprop:Generator_ColumnPropNameInRow="ShowTimeId" msprop:Generator_ColumnPropNameInTable="ShowTimeIdColumn" msprop:Generator_ColumnVarNameInTable="columnShowTimeId" msprop:Generator_UserColumnName="ShowTimeId" type="xs:int" />
              <xs:element name="MovieId" msprop:Generator_ColumnPropNameInRow="MovieId" msprop:Generator_ColumnPropNameInTable="MovieIdColumn" msprop:Generator_ColumnVarNameInTable="columnMovieId" msprop:Generator_UserColumnName="MovieId" type="xs:int" />
              <xs:element name="ScreenRoomId" msprop:Generator_ColumnPropNameInRow="ScreenRoomId" msprop:Generator_ColumnPropNameInTable="ScreenRoomIdColumn" msprop:Generator_ColumnVarNameInTable="columnScreenRoomId" msprop:Generator_UserColumnName="ScreenRoomId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ticket" msprop:Generator_RowEvHandlerName="TicketRowChangeEventHandler" msprop:Generator_RowDeletedName="TicketRowDeleted" msprop:Generator_RowDeletingName="TicketRowDeleting" msprop:Generator_RowEvArgName="TicketRowChangeEvent" msprop:Generator_TablePropName="Ticket" msprop:Generator_RowChangedName="TicketRowChanged" msprop:Generator_RowChangingName="TicketRowChanging" msprop:Generator_TableClassName="TicketDataTable" msprop:Generator_RowClassName="TicketRow" msprop:Generator_TableVarName="tableTicket" msprop:Generator_UserTableName="Ticket">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ticketId" msprop:Generator_ColumnPropNameInRow="ticketId" msprop:Generator_ColumnPropNameInTable="ticketIdColumn" msprop:Generator_ColumnVarNameInTable="columnticketId" msprop:Generator_UserColumnName="ticketId" type="xs:int" />
              <xs:element name="E_ticket" msprop:Generator_ColumnPropNameInRow="E_ticket" msprop:Generator_ColumnPropNameInTable="E_ticketColumn" msprop:Generator_ColumnVarNameInTable="columnE_ticket" msprop:Generator_UserColumnName="E_ticket" type="xs:int" />
              <xs:element name="availability" msprop:Generator_ColumnPropNameInRow="availability" msprop:Generator_ColumnPropNameInTable="availabilityColumn" msprop:Generator_ColumnVarNameInTable="columnavailability" msprop:Generator_UserColumnName="availability">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserData" msprop:Generator_RowEvHandlerName="UserDataRowChangeEventHandler" msprop:Generator_RowDeletedName="UserDataRowDeleted" msprop:Generator_RowDeletingName="UserDataRowDeleting" msprop:Generator_RowEvArgName="UserDataRowChangeEvent" msprop:Generator_TablePropName="UserData" msprop:Generator_RowChangedName="UserDataRowChanged" msprop:Generator_RowChangingName="UserDataRowChanging" msprop:Generator_TableClassName="UserDataDataTable" msprop:Generator_RowClassName="UserDataRow" msprop:Generator_TableVarName="tableUserData" msprop:Generator_UserTableName="UserData">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_UserColumnName="UserId" type="xs:int" />
              <xs:element name="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_UserColumnName="UserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserType" msprop:Generator_ColumnPropNameInRow="UserType" msprop:Generator_ColumnPropNameInTable="UserTypeColumn" msprop:Generator_ColumnVarNameInTable="columnUserType" msprop:Generator_UserColumnName="UserType">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Movies" />
      <xs:field xpath="mstns:MovieId" />
    </xs:unique>
    <xs:unique name="MovieTicketUser_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MovieTicketUser" />
      <xs:field xpath="mstns:MovieId" />
      <xs:field xpath="mstns:TicketId" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
    <xs:unique name="ScreenRoom_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ScreenRoom" />
      <xs:field xpath="mstns:ScreenRoomId" />
    </xs:unique>
    <xs:unique name="ShowTime_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ShowTime" />
      <xs:field xpath="mstns:ShowTimeId" />
    </xs:unique>
    <xs:unique name="Ticket_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ticket" />
      <xs:field xpath="mstns:ticketId" />
    </xs:unique>
    <xs:unique name="UserData_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserData" />
      <xs:field xpath="mstns:UserId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_MovieTicketUser" msdata:parent="Ticket" msdata:child="MovieTicketUser" msdata:parentkey="ticketId" msdata:childkey="TicketId" msprop:Generator_UserParentTable="Ticket" msprop:Generator_UserChildTable="MovieTicketUser" msprop:Generator_RelationVarName="relationFK_MovieTicketUser" msprop:Generator_UserRelationName="FK_MovieTicketUser" msprop:Generator_ChildPropName="GetMovieTicketUserRows" msprop:Generator_ParentPropName="TicketRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>